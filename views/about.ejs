

<div class="testimonial ">
    <div class="small-container">
        <h1>About us</h1>
        <div class="row ">
            <div class="col-3">
                <img src="/images/IndrajitMukherjee.jpg" alt="Mentor Image">
                <h3>INDRAJIT MUKHERJEE </h3>
             <p>"Assistant Professor, Computer Science and Engg
                M.Sc.(Spl. Electronics), MCA, M.Phil.(Comp. Sc.), Ph.D. (Comp. Sc.)"</p>
               
            </div>
            <div class="col-3">
                <img src="/images/RAMAN.jpg" alt="Student1">
                   <h3>RAMAN KUMAR</h3>
                <p>" B.TECH , Computer Science , 2021-2025, Birla Institue of Technology , Mesra "</p>
                   
               </div>
        
        <div class="col-3">
            <img src="/images/aryan.jpg" alt="student2">
               <h3>ARYAN KUMAR</h3>
            <p>" B.TECH , Computer Science , 2021-2025, Birla Institue of Technology , Mesra "</p>
               
           </div>
        </div>

        <!-- <div class="para">
            <h2>Project Overview</h2>

           <p> Welcome to our web application project built with Node.js , Express.js,React and JavaScript. This platform is designed to allow users to create, view, and manage posts with ease. The application incorporates robust features to ensure a seamless and secure user experience.</p>
            <br>
            <h3>Purpose</h3>
            The main purpose of this project is to provide a dynamic and interactive web application where users can:<br>
            
            1. Post Content: Users can create posts with various details such as title, image, price, contact number, college information, UPI ID, and description.
            View Posts: Users can view a detailed page of each post by clicking on post cards.<br>
            2. Profile Management: Users have a dedicated profile page displaying their posted content.<br>
            3. Admin Dashboard: Admins can manage the content through a dedicated dashboard that provides an overview and management capabilities for posts.<br>
            Key Features
            User Authentication and Authorization: Secure login and registration system using JSON Web Tokens (JWT), bcrypt for password hashing, and body-parser for handling request bodies.
            Image Upload Capability: Users can upload images along with their posts, enhancing the visual appeal and information richness of the content.
            Post Management: Users can create, edit, and delete their posts. The admin has additional capabilities to manage all posts on the platform.
            Detailed Post View: Clicking on a post card redirects users to a detailed view page, providing comprehensive information about the post.
            Profile Page: A personalized profile page where users can see all their posted products.
            Admin Dashboard: A dashboard for admins to manage the entire platform, including viewing and managing all user posts.
            Technologies Used
            Node.js: A JavaScript runtime built on Chrome's V8 JavaScript engine, used for building the backend server.
            Express.js: A minimal and flexible Node.js web application framework, providing a robust set of features for web and mobile applications.
            MongoDB: A NoSQL database used to store user and post data, ensuring flexibility and scalability.
            Mongoose: An ODM (Object Data Modeling) library for MongoDB and Node.js, used to manage database schemas and interactions.
            JWT: JSON Web Tokens for secure user authentication and authorization.
            bcrypt: A library to hash user passwords for secure storage.
            body-parser: Middleware to parse incoming request bodies in a middleware before your handlers, available under the req.body property.
            Future Enhancements
            We plan to continuously improve and add new features to the platform, such as:
            
            Enhanced Search and Filtering: Implementing advanced search and filtering capabilities to help users find posts quickly and efficiently.
            User Notifications: Adding a notification system to alert users about important updates or actions on their posts.
            Real-time Chat: Integrating a real-time chat feature to facilitate communication between users and potential buyers.
            Analytics Dashboard: Providing an analytics dashboard for admins to gain insights into user activities and post performance.
            Contact Us
            For any queries or feedback, feel free to contact us at contact@example.com. We value your input and are committed to providing the best user experience.
        </div> -->
    
        <div class="container">
            <section class="about">
                <h2>About</h2>
    
                <section class="overview">
                    <h3>Project Overview</h3>
                    <p>Welcome to our web application project built with Node.js and Express.js. This platform is designed to allow users to create, view, and manage posts with ease. The application incorporates robust features to ensure a seamless and secure user experience.</p>
                </section>
    
                <section class="purpose">
                    <h3>Purpose</h3>
                    <p>The main purpose of this project is to provide a dynamic and interactive web application where users can:</p>
                    <ul>
                        <li>Post Content: Users can create posts with various details such as title, image, price, contact number, college information, UPI ID, and description.</li>
                        <li>View Posts: Users can view a detailed page of each post by clicking on post cards.</li>
                        <li>Profile Management: Users have a dedicated profile page displaying their posted content.</li>
                        <li>Admin Dashboard: Admins can manage the content through a dedicated dashboard that provides an overview and management capabilities for posts.</li>
                    </ul>
                </section>
    
                <section class="features">
                    <h3>Key Features</h3>
                    <ul>
                        <li>User Authentication and Authorization: Secure login and registration system using JSON Web Tokens (JWT), bcrypt for password hashing, and body-parser for handling request bodies.</li>
                        <li>Image Upload Capability: Users can upload images along with their posts, enhancing the visual appeal and information richness of the content.</li>
                        <li>Post Management: Users can create, edit, and delete their posts. The admin has additional capabilities to manage all posts on the platform.</li>
                        <li>Detailed Post View: Clicking on a post card redirects users to a detailed view page, providing comprehensive information about the post.</li>
                        <li>Profile Page: A personalized profile page where users can see all their posted products.</li>
                        <li>Admin Dashboard: A dashboard for admins to manage the entire platform, including viewing and managing all user posts.</li>
                    </ul>
                </section>
    
                
    
                <section class="future">
                    <h3>Future Enhancements</h3>
                    <p>We plan to continuously improve and add new features to the platform, such as:</p>
                    <ul>
                        <li>Enhanced Search and Filtering: Implementing advanced search and filtering capabilities to help users find posts quickly and efficiently.</li>
                        <li>User Notifications: Adding a notification system to alert users about important updates or actions on their posts.</li>
                        <li>Real-time Chat: Integrating a real-time chat feature to facilitate communication between users and potential buyers.</li>
                        <li>Analytics Dashboard: Providing an analytics dashboard for admins to gain insights into user activities and post performance.</li>
                    </ul>
                </section>
    
                <section class="contact">
                    <h3>Contact Us</h3>
                    <p>For any queries or feedback, feel free to contact us at <a href="mailto:contact@example.com">contact@example.com</a>. We value your input and are committed to providing the best user experience.</p>
                </section>
            </section>
        </div>
    
    </div>
 </div>
